# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: 3.0.1
info:
  title: thg-procure-questionnaire-service
  description: This is to serve as the documentation of the questionnaire-service APIs for THG Procure.
  version: 1.0.0
  contact:
    name: Abhijeet Singh
    email: abhijeet.singh@cloudesign.com
servers:
  - url: https://dev.qts.thg-procure.com
  - url: https://uat.qts.thg-procure.com
  - url: https://qts.thg-procure.com
paths:
  /questionnaire:
    description: API endpoints to manage questionnaires
    post:
      description: Add a new questionnaire
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createQuestionnaire'
      responses:
        200:
          description: Questionnaire created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getQuestionnaire'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Client Not Found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /questionnaires:
    description: API endpoints to fetch list of questionnaires
    get:
      description: Get list of questionnaires
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: query
          name: name
          description: Filter questionnaire list on basis of names
          required: false
          schema:
            type: string
            example: SupplierOnboardingForm
        - in: query
          name: description
          description: Filter questionnaire list on basis of description
          required: false
          schema:
            type: string
            example: SupplierOnboardingForm
      responses:
        200:
          description: Questionnaires fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getQuestionnaires'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Client Not Found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /questionnaire/{id}:
    description: API endpoints to manage a questionnaire
    put:
      description: Update an existing questionnaire
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateQuestionnaire'
      responses:
        200:
          description: Questionnaire updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getQuestionnaire'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
    get:
      description: Get details of a questionnaire by ID
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        200:
          description: Questionnaire fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getQuestionnaire'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
    delete:
      description: Delete a specific questionnaire
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire to delete
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        204:
          description: Questionnaire deleted successfully
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /questionnaire/{id}/answer:
    description: API endpoints to manage answer to a questionnaire
    post:
      description: Submit answer to a questionnaire
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnswer'
      responses:
        200:
          description: Answer posted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnswer'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
    get:
      description: Get details of latest answer to a question by questionnaire ID
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire to fetch its latest answer
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        200:
          description: Answer fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnswer'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id or answer to that questionnaire not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /questionnaire/{id}/answers:
    description: API endpoints to manage answers to a questionnaire
    get:
      description: Get details of all answers to a question by questionnaire ID
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: The unique id of the questionnaire to fetch its answers
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        200:
          description: Answer fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getAnswer'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id or answer to that questionnaire not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /questionnaire/{qts_id}/answer/{ans_id}:
    put:
      description: Update an existing answer
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: qts_id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: ans_id
          description: The unique id of the answer
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAnswer'
      responses:
        200:
          description: Answer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnswer'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id or answer to that questionnaire not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
    get:
      description: Get details of an answer by ID
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: qts_id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: ans_id
          description: The unique id of the answer
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        200:
          description: Answer fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnswer'
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id or answer to that questionnaire not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
    delete:
      description: Delete a specific answer using Questionnaire Id and answer Id
      parameters:
        - in: header
          name: qts-client-id
          description: To identify client of the questionnaire service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: qts_id
          description: The unique id of the questionnaire
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: ans_id
          description: The unique id of the answer
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        204:
          description: Answer deleted successfully
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        404:
          description: Requested Questionnaire id or answer to that questionnaire not found
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        401:
          description: Unauthorized
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
        400:
          description: Bad Request
          headers:
            qtsClientId:
              schema:
                type: string
                format: uuid
              description: Requested Client Id
  /client:
    description: API endpoints to manage Clients of Questionnaire Service
    post:
      description: Create a new Client
      parameters:
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createClient'
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient'
        400:
          description: Bad Request
        401:
          description: Unauthorized
  /client/{id}:
    put:
      description: Update an existing Client
      parameters:
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: Uniquely identifies the client.
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateClient'
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient'
        400:
          description: Bad Request
        404:
          description: Requested Client id not found
        401:
          description: Unauthorized
    delete:
      description: Disable a Client
      parameters:
        - in: header
          name: qts-request-id
          description: Uniquely identifies the request.
          required: false
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
        - in: path
          name: id
          description: Uniquely identifies the client to the Questionnaire Service
          required: true
          schema:
            type: string
            format: uuid
            example: 7ffc1b3a-5395-11ee-8c99-0242ac120002
      responses:
        204:
          description: Deleted
        404:
          description: Requested Client id not found
        401:
          description: Unauthorized
        400:
          description: Bad Request
components:
  schemas:
    createQuestionnaire:
      type: object
      required: [name, description, schema]
      properties:
        name:
          type: string
        description:
          type: string
        schema:
          type: string
    getQuestionnaires:
      type: object
      required: [id, name, description, createdAt, updatedAt, createdBy, updatedBy]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
    getQuestionnaire:
      type: object
      required: [id, name, description, schema, createdAt, updatedAt, createdBy, updatedBy]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        schema:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
    updateQuestionnaire:
      type: object
      required: [questionnaireName, questionnaireDescription, questionnaireSchema]
      properties:
        name:
          type: string
        description:
          type: string
        schema:
          type: string
    createAnswer:
      type: object
      required: [data]
      properties:
        data:
          type: string
    updateAnswer:
      type: object
      required: [data]
      properties:
        data:
          type: string
    getAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questionnaireId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        data:
          type: string
    createClient:
      type: object
      required: [clientName, description]
      properties:
        clientName:
          type: string
        description:
          type: string
    updateClient:
      type: object
      required: [clientName, description]
      properties:
        clientName:
          type: string
        description:
          type: string
    getClient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        clientName:
          type: string
        description:
          type: string
